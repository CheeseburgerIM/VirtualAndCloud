(function(){"use strict";var e={5032:function(e,n,o){var t=o(8935),d=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"app"}},[o("IndexPage")],1)},s=[],a=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"IndexPage"}},[o("div",{attrs:{id:"siteBackground"}}),o("div",{attrs:{id:"index"}},[o("div",{attrs:{id:"navigation"}},[o("div",{attrs:{id:"menu"}},[o("div",{attrs:{id:"menuList"}},[o("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[o("router-link",{attrs:{to:"/index","active-class":"menuActive"}},[o("i",{staticClass:"el-icon-s-home"}),o("span",[e._v("主页")])])],1),o("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[o("router-link",{attrs:{to:"/code","active-class":"menuActive"}},[o("i",{staticClass:"el-icon-s-tools"}),o("span",[e._v("代码")])])],1),o("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[o("router-link",{attrs:{to:"/document","active-class":"menuActive"}},[o("i",{staticClass:"el-icon-s-management"}),o("span",[e._v("文档")])])],1),o("div",{staticClass:"menuChild",attrs:{onclick:"window.scroll({top:0,left:0,behavior:'instant'})"}},[o("router-link",{attrs:{to:"/about","active-class":"menuActive"}},[o("i",{staticClass:"el-icon-s-custom"}),o("span",[e._v("关于")])])],1)])])])]),o("h1",{staticStyle:{"margin-top":"70px"}},[e._v("虚拟化技术与云计算 - 基于Serverless的数据预处理服务")]),o("keep-alive",[o("router-view")],1)],1)},l=[],c={name:"IndexPage",methods:{},mounted(){},data(){return{}}},r=c,i=o(1001),u=(0,i.Z)(r,a,l,!1,null,null,null),p=u.exports,m={name:"App",components:{IndexPage:p}},y=m,x=(0,i.Z)(y,d,s,!1,null,null,null),h=x.exports,b=o(2809),f=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"Home"}},[o("el-select",{staticStyle:{"margin-right":"17px"},attrs:{placeholder:"请选择云函数",filterable:"","default-first-option":!0},on:{change:function(n){return e.selectionChange()}},model:{value:e.value,callback:function(n){e.value=n},expression:"value"}},e._l(e.options,(function(e){return o("el-option",{key:e.key,attrs:{label:e.value,value:e.key}})})),1),o("el-button",{staticStyle:{"margin-left":"17px"},attrs:{type:"primary",plain:""},on:{click:function(n){return e.input()}}},[e._v("代码测试 RUN")]),o("div",{attrs:{id:"IO"}},[o("el-input",{attrs:{type:"textarea",autosize:{minRows:11,maxRows:11},placeholder:e.example,size:"large"},model:{value:e.text,callback:function(n){e.text=n},expression:"text"}}),o("el-input",{attrs:{type:"textarea",autosize:{minRows:11,maxRows:11},placeholder:e.expected,size:"large"},model:{value:e.result,callback:function(n){e.result=n},expression:"result"}})],1)],1)},v=[];const B='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.mean(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',j="[1,2,3,4,5,6,7]",k="4";var g,C,w={code:B,example:j,result:k},F=w,E=(0,i.Z)(F,g,C,!1,null,null,null),_=E.exports;const Z='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(max(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',T="[5,20,10]",S="20";var O,z,L={code:Z,example:T,result:S},P=L,A=(0,i.Z)(P,O,z,!1,null,null,null),R=A.exports;const I='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(min(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',M="[5,20,10]",D="5";var $,N,J={code:I,example:M,result:D},W=J,H=(0,i.Z)(W,$,N,!1,null,null,null),G=H.exports;const U='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.average(jsonBody["data"], weights=jsonBody["weight"])),\n        "headers": {"Content-Type": "application/json"},\n    }\n\n',q='\n{\n    "data": [4,5,2,1,3],\n    "weight": [1,1,1,3,2]\n}\n',K="2.5";var Q,V,X={code:U,example:q,result:K},Y=X,ee=(0,i.Z)(Y,Q,V,!1,null,null,null),ne=ee.exports;const oe='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(Counter(jsonBody)),\n        "headers": {"Content-Type": "application/json"},\n    }\n',te="[1,2,3,3,4,4,4,5]",de="\nCounter({\n    3: 2,\n    1: 1,\n    2: 1,\n    4: 1\n})";var se,ae,le={code:oe,example:te,result:de},ce=le,re=(0,i.Z)(ce,se,ae,!1,null,null,null),ie=re.exports;const ue='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.around(jsonBody["data"], jsonBody["bitcount"])),\n        "headers": {"Content-Type": "application/json"},\n    }\n',pe='\n{\n    "data": [1.936,4.656,3.074,4.7767],\n    "bitcount": 2\n}',me="\n[\n    1.94 4.66 3.07 4.78\n]";var ye,xe,he={code:ue,example:pe,result:me},be=he,fe=(0,i.Z)(be,ye,xe,!1,null,null,null),ve=fe.exports;const Be='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\ndef handler (event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    x = np.var(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(x),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',je="\n[1,3,7,9,4,0,-1,-3,-7,11,16]",ke="\n40.59504132231405";var ge,Ce,we={code:Be,example:je,result:ke},Fe=we,Ee=(0,i.Z)(Fe,ge,Ce,!1,null,null,null),_e=Ee.exports;const Ze='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    x = sorted(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(x),\n        "headers": {"Content-Type": "application/json"},\n    }\n\n',Te="\n[1,5,2,-5,4,3,0,-1,-3]",Se="\n-5,-3,-1,0,1,2,3,4,5";var Oe,ze,Le={code:Ze,example:Te,result:Se},Pe=Le,Ae=(0,i.Z)(Pe,Oe,ze,!1,null,null,null),Re=Ae.exports;const Ie='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n# from scipy import stats\n\n\ndef handler (event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    counts = np.bincount(jsonBody)\n    print(np.argmax(counts))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.argmax(counts)),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',Me="\n[3,2,6,8,1,2,3,4,3]",De="3";var $e,Ne,Je={code:Ie,example:Me,result:De},We=Je,He=(0,i.Z)(We,$e,Ne,!1,null,null,null),Ge=He.exports;const Ue='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler (event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.median(jsonBody)),\n        "headers": {\n            "Content-Type": "application/json"\n        }\n    }\n',qe="\n[1,2,3,4,5,6,7,8]",Ke="4.5";var Qe,Ve,Xe={code:Ue,example:qe,result:Ke},Ye=Xe,en=(0,i.Z)(Ye,Qe,Ve,!1,null,null,null),nn=en.exports;const on='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    k = jsonBody["key"]\n    for key in k:\n        print(key, ": ", k[key])\n    m = jsonBody["data"]\n    c = len(m[0])\n    r = len(m)\n    t = [[0 for col in range(c)] for row in range(r)]\n    for i in range(r):\n        for j in range(c):\n            if t[i][j] == 0:\n                for key in k:\n                    if m[i][j] == float(key):\n                        m[i][j] = k[key]\n                        t[i][j] = 1\n                        break\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(m),\n        "headers": {"Content-Type": "application/json"},\n    }\n',tn='\n{\n    "key":{\n        "1":0,\n        "0":1\n    },\n    "data":[\n        [0,1,2,3],\n        [1,2,3,4]\n    ]\n}',dn="[1,0,2,3]\n[0,2,3,4]";var sn,an,ln={code:on,example:tn,result:dn},cn=ln,rn=(0,i.Z)(cn,sn,an,!1,null,null,null),un=rn.exports;const pn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    jsonBody = jsonBody.split(".")\n    str1 = jsonBody[0].replace("[", "").replace("]", "")\n    str2 = jsonBody[1].replace("[", "").replace("]", "")\n    list1 = str1.split(",")\n    list2 = []\n    for i in list1:\n        i = float(i)\n        list2.append(i)\n    list3 = str2.split(",")\n    list4 = []\n    for i in list3:\n        i = float(i)\n        list4.append(i)\n    a = np.array([list2, list4])\n    ans = np.cov(a)\n    # avg1 = np.mean(list1)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',mn='"[3,2,6,8,1,2,3,4,3].[1,2,3,4,5,6,7,8,9]"',yn="\n[[ 4.77777778 -0.75      ]\n [-0.75        7.5       ]]";var xn,hn,bn={code:pn,example:mn,result:yn},fn=bn,vn=(0,i.Z)(fn,xn,hn,!1,null,null,null),Bn=vn.exports;const jn='# -- coding:utf-8 --\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n    list1 = []\n    for i in jsonBody:\n        list1.append((i - min(jsonBody)) / (max(jsonBody) - min(jsonBody)))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(list1),\n        "headers": {"Content-Type": "application/json"},\n    }\n',kn="[3,4,1,2,0]",gn="[0.75, 1.0, 0.25, 0.5, 0.0]";var Cn,wn,Fn={code:jn,example:kn,result:gn},En=Fn,_n=(0,i.Z)(En,Cn,wn,!1,null,null,null),Zn=_n.exports;const Tn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = np.array(jsonBody, dtype=np.float)\n    raw = len(a)\n    col = len(a[0])\n    temp = []\n    # ans = []\n    for i in range(0, raw):\n        vec = a[i]\n        for j in range(0, col):\n            if np.isnan(vec[j]):\n                a[i][j] = 0\n    # ans = np.array(ans)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(a.tolist()),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Sn="\n[\n    [1,2,null,4],\n    [null,3,4,5],\n    [5,2,null,7],\n    [6,1,2,10]\n]",On="[1,0,2,3]\n[0,2,3,4]";var zn,Ln,Pn={code:Tn,example:Sn,result:On},An=Pn,Rn=(0,i.Z)(An,zn,Ln,!1,null,null,null),In=Rn.exports;const Mn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    a = jsonBody["axis"]\n    m = jsonBody["data"]\n    l = len(jsonBody)\n    ans = []\n    if l == 1:\n        ans.append(m)\n    else:\n        ans.append(np.concatenate(m,int(a)))\n        # for i in range(l - 1):\n        #     ans.append(np.append(m[i], m[i + 1], int(a)))\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(ans),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Dn='\n{\n    "axis": 0, // 0为行拼接;1为列拼接\n    "data": [\n        [\n            [1,2,3],\n            [2,3,4]\n        ],\n        [\n            [5,6,7],\n            [6,7,8]\n        ],\n        [\n            ["a","b","c"],\n            ["d","e","f"]\n        ]\n    ]\n}',$n="\n[['1', '2', '3'],\n['2', '3', '4'],\n['5', '6', '7'],\n['6', '7', '8'],\n['a', 'b', 'c'],\n['d', 'e', 'f']]";var Nn,Jn,Wn={code:Mn,example:Dn,result:$n},Hn=Wn,Gn=(0,i.Z)(Hn,Nn,Jn,!1,null,null,null),Un=Gn.exports;const qn='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nfrom collections import Counter\nimport base64\n\n\ndef handler(event, context):\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody)\n    jsonBody = json.loads(decodedBody)\n    decodedBody = decodedBody.decode()\n    arr = np.array(jsonBody)\n\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": str(np.array(list(set([tuple(t) for t in arr])))),\n        "headers": {"Content-Type": "application/json"},\n    }\n',Kn="\n[\n    [1,2,3],\n    [1,2,3],\n    [2,3,4]\n]",Qn="\n[[2 3 4]\n [1 2 3]]";var Vn,Xn,Yn={code:qn,example:Kn,result:Qn},eo=Yn,no=(0,i.Z)(eo,Vn,Xn,!1,null,null,null),oo=no.exports;const to='# -*- coding:utf-8 -*-\nimport json\nimport numpy as np\nimport base64\n\n\ndef handler(event, context):\n\n    encodedBody = event["body"]\n    decodedBody = base64.b64decode(encodedBody).decode()\n    jsonBody = json.loads(decodedBody)\n\n    mean = np.mean(jsonBody)\n    std = np.std(jsonBody)\n    sigma = std * 3\n    a = np.array(jsonBody, dtype=float)\n    row = len(a)\n    col = len(a[0])\n\n    # ans = np.array()\n\n    for i in range(0, row):\n        for j in range(0, col):\n            if (a[i][j] - mean) > sigma:\n                a = np.delete(a, i, 0)\n\n    # x = sorted(jsonBody)\n    return {\n        "statusCode": 200,\n        "isBase64Encoded": False,\n        "body": json.dumps(a.tolist()),\n        "headers": {"Content-Type": "application/json"},\n    }\n',so="\n[\n    [1,2,100,4],\n    [2,3,4,5],\n    [5,2,4,7],\n    [6,1,2,10]\n]",ao="\n[[2 3 4]\n [1 2 3]]";var lo,co,ro={code:to,example:so,result:ao},io=ro,uo=(0,i.Z)(io,lo,co,!1,null,null,null),po=uo.exports;const mo="# Please select a function first",yo={code:_.code,example:_.example,result:_.result},xo={code:R.code,example:R.example,result:R.result},ho={code:G.code,example:G.example,result:G.result},bo={code:ne.code,example:ne.example,result:ne.result},fo={code:ie.code,example:ie.example,result:ie.result},vo={code:ve.code,example:ve.example,result:ve.result},Bo={code:_e.code,example:_e.example,result:_e.result},jo={code:Re.code,example:Re.example,result:Re.result},ko={code:Ge.code,example:Ge.example,result:Ge.result},go={code:nn.code,example:nn.example,result:nn.result},Co={code:un.code,example:un.example,result:un.result},wo={code:Bn.code,example:Bn.example,result:Bn.result},Fo={code:Zn.code,example:Zn.example,result:Zn.result},Eo={code:In.code,example:In.example,result:In.result},_o={code:Un.code,example:Un.example,result:Un.result},Zo={code:oo.code,example:oo.example,result:oo.result},To={code:po.code,example:po.example,result:po.result};var So,Oo,zo={code:mo,code1:yo,code2:xo,code3:ho,code4:bo,code5:fo,code6:vo,code7:Bo,code8:jo,code9:ko,code10:go,code11:Co,code12:wo,code13:Fo,code14:Eo,code15:_o,code16:Zo,code17:To},Lo=zo,Po=(0,i.Z)(Lo,So,Oo,!1,null,null,null),Ao=Po.exports;const Ro=[{key:"1",value:"平均值"},{key:"2",value:"最大值"},{key:"3",value:"最小值"},{key:"4",value:"加权平均"},{key:"5",value:"计数"},{key:"6",value:"保留小数"},{key:"7",value:"方差"},{key:"8",value:"排序"},{key:"9",value:"众数"},{key:"10",value:"中位数"},{key:"11",value:"数据替换"},{key:"12",value:"协方差"},{key:"13",value:"归一化"},{key:"14",value:"填补空缺值"},{key:"15",value:"多数组拼接"},{key:"16",value:"去除冗余"},{key:"17",value:"去除离群值"},{key:"18",value:"数据离散化"}];var Io,Mo,Do={FunctionList:Ro},$o=Do,No=(0,i.Z)($o,Io,Mo,!1,null,null,null),Jo=No.exports,Wo={name:"Home",components:{},methods:{selectionChange(){this.text="",this.result="";let e="请以JSON格式输入函数所需参数\nExample: ",n="Expected Result: ";switch(this.value){case"1":this.example=e+Ao.code1.example,this.expected=n+Ao.code1.result;break;case"2":this.example=e+Ao.code2.example,this.expected=n+Ao.code2.result;break;case"3":this.example=e+Ao.code3.example,this.expected=n+Ao.code3.result;break;case"4":this.example=e+Ao.code4.example,this.expected=n+Ao.code4.result;break;case"5":this.example=e+Ao.code5.example,this.expected=n+Ao.code5.result;break;case"6":this.example=e+Ao.code6.example,this.expected=n+Ao.code6.result;break;case"7":this.example=e+Ao.code7.example,this.expected=n+Ao.code7.result;break;case"8":this.example=e+Ao.code8.example,this.expected=n+Ao.code8.result;break;case"9":this.example=e+Ao.code9.example,this.expected=n+Ao.code9.result;break;case"10":this.example=e+Ao.code10.example,this.expected=n+Ao.code10.result;break;case"11":this.example=e+Ao.code11.example,this.expected=n+Ao.code11.result;break;case"12":this.example=e+Ao.code12.example,this.expected=n+Ao.code12.result;break;case"13":this.example=e+Ao.code13.example,this.expected=n+Ao.code13.result;break;case"14":this.example=e+Ao.code14.example,this.expected=n+Ao.code14.result;break;case"15":this.example=e+Ao.code15.example,this.expected=n+Ao.code15.result;break;case"16":this.example=e+Ao.code16.example,this.expected=n+Ao.code16.result;break;case"17":this.example=e+Ao.code17.example,this.expected=n+Ao.code17.result;break;default:this.example="请以JSON格式输入函数所需参数",this.expected="云函数执行结果, 非必要请勿修改";break}},input(){if(""!=this.value)if(""!=this.text)switch(this.result="Loading...",console.log(new Date),this.value){case"1":this.callCloudFunction("Average","pyz");break;case"2":this.callCloudFunction("Maximum","pyz");break;case"3":this.callCloudFunction("Minimum","pyz");break;case"4":this.callCloudFunction("weightaverage","pyz");break;case"5":this.callCloudFunction("count","pyz");break;case"6":this.callCloudFunction("finitebit","pyz");break;case"7":this.callCloudFunction("variance","sj");break;case"8":this.callCloudFunction("sort","sj");break;case"9":this.callCloudFunction("mode","sj");break;case"10":this.callCloudFunction("medium","sj");break;case"11":this.callCloudFunction("replace","pyz",11);break;case"12":this.callCloudFunction("covariance","sj");break;case"13":this.callCloudFunction("normalize","sj");break;case"14":this.callCloudFunction("Missing_value","sj",14);break;case"15":this.callCloudFunction("combine","pyz",15);break;case"16":this.callCloudFunction("redundant","pyz");break;case"17":this.callCloudFunction("Remove_outlier_values","sj",17);break;default:break}else this.result="Empty Input";else this.result="Please select a function first"},callCloudFunction(e,n,t){const d=this,s=o(6166),a=".api.cheeseburgerim.space/",l={method:"post",url:"https://"+n+a+e,data:d.text};s(l).then((function(e){let n=e.data;if(console.log(n),11==t||14==t){let e=(new Date).toLocaleString()+"\nClould Function Result: \n";for(let o=0;o<n.length;o++)e=e+"["+n[o]+"]\n";d.result=e}else if(15==t){let e=(new Date).toLocaleString()+"\nClould Function Result: \n";e=e+"      "+n.split("(")[1].split(", dtype")[0],e.includes(")")&&(e=e.split(")")[0]),d.result=e}else d.result=(new Date).toLocaleString()+"\nClould Function Result: \n"+n})).catch((function(e){console.log(e)}))}},data(){return{options:Jo.FunctionList,value:"",text:"",result:"",example:"请以JSON格式输入函数所需参数",expected:"云函数执行结果, 非必要请勿修改"}}},Ho=Wo,Go=(0,i.Z)(Ho,f,v,!1,null,null,null),Uo=Go.exports,qo=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"Code"}},[o("el-menu",{staticClass:"hoverEffect",attrs:{mode:"vertical"}},e._l(e.itemList,(function(n){return o("el-menu-item",{key:n.key,on:{click:function(o){return e.itemChange(n.key)}}},[e._v(e._s(n.value))])})),1),o("editor",{staticClass:"hoverEffect",staticStyle:{"margin-right":"17px"},attrs:{lang:"python",theme:"chrome",width:"87%",height:"77vh",options:e.options},on:{init:e.editorInit},model:{value:e.content,callback:function(n){e.content=n},expression:"content"}})],1)},Ko=[],Qo={name:"Code",components:{editor:o(1190)},methods:{editorInit:function(){o(6932),o(803),o(3277),o(3139)},itemChange(e){switch(this.item=e,this.item){case"1":this.content=Ao.code1.code;break;case"2":this.content=Ao.code2.code;break;case"3":this.content=Ao.code3.code;break;case"4":this.content=Ao.code4.code;break;case"5":this.content=Ao.code5.code;break;case"6":this.content=Ao.code6.code;break;case"7":this.content=Ao.code7.code;break;case"8":this.content=Ao.code8.code;break;case"9":this.content=Ao.code9.code;break;case"10":this.content=Ao.code10.code;break;case"11":this.content=Ao.code11.code;break;case"12":this.content=Ao.code12.code;break;case"13":this.content=Ao.code13.code;break;case"14":this.content=Ao.code14.code;break;case"15":this.content=Ao.code15.code;break;case"16":this.content=Ao.code16.code;break;case"17":this.content=Ao.code17.code;break;default:this.content=Ao.code;break}}},data(){return{options:{enableBasicAutocompletion:!0,enableSnippets:!0,enableLiveAutocompletion:!0,printMarginColumn:30,displayIndentGuides:!1,enableEmmet:!0,tabSize:6,fontSize:18,useWorker:!0,showPrintMargin:!1,enableMultiselect:!0,readOnly:!1,showFoldWidgets:!0,fadeFoldWidgets:!0,wrap:!0},itemList:Jo.FunctionList,content:Ao.code,item:""}}},Vo=Qo,Xo=(0,i.Z)(Vo,qo,Ko,!1,null,null,null),Yo=Xo.exports,et=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"Document"}})},nt=[],ot={name:"Document"},tt=ot,dt=(0,i.Z)(tt,et,nt,!1,null,null,null),st=dt.exports,at=function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",{attrs:{id:"About"}})},lt=[],ct={name:"About"},rt=ct,it=(0,i.Z)(rt,at,lt,!1,null,null,null),ut=it.exports,pt=new b.Z({routes:[{path:"/",redirect:"/index"},{path:"/index",component:Uo},{path:"/code",component:Yo},{path:"/document",component:st},{path:"/about",component:ut}]}),mt=o(4549),yt=o.n(mt);t["default"].use(b.Z),t["default"].use(yt()),t["default"].config.productionTip=!1,new t["default"]({render:e=>e(h),router:pt}).$mount("#app")}},n={};function o(t){var d=n[t];if(void 0!==d)return d.exports;var s=n[t]={exports:{}};return e[t](s,s.exports,o),s.exports}o.m=e,function(){o.amdD=function(){throw new Error("define cannot be used indirect")}}(),function(){var e=[];o.O=function(n,t,d,s){if(!t){var a=1/0;for(i=0;i<e.length;i++){t=e[i][0],d=e[i][1],s=e[i][2];for(var l=!0,c=0;c<t.length;c++)(!1&s||a>=s)&&Object.keys(o.O).every((function(e){return o.O[e](t[c])}))?t.splice(c--,1):(l=!1,s<a&&(a=s));if(l){e.splice(i--,1);var r=d();void 0!==r&&(n=r)}}return n}s=s||0;for(var i=e.length;i>0&&e[i-1][2]>s;i--)e[i]=e[i-1];e[i]=[t,d,s]}}(),function(){o.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(n,{a:n}),n}}(),function(){o.d=function(e,n){for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}}(),function(){o.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};o.O.j=function(n){return 0===e[n]};var n=function(n,t){var d,s,a=t[0],l=t[1],c=t[2],r=0;if(a.some((function(n){return 0!==e[n]}))){for(d in l)o.o(l,d)&&(o.m[d]=l[d]);if(c)var i=c(o)}for(n&&n(t);r<a.length;r++)s=a[r],o.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return o.O(i)},t=self["webpackChunkdemo"]=self["webpackChunkdemo"]||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))}();var t=o.O(void 0,[998],(function(){return o(5032)}));t=o.O(t)})();
//# sourceMappingURL=app.9dbd521b.js.map